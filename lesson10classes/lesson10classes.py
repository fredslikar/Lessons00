#класс состоит из методов, метод это как и функция, но у них иногда зарезервированы имена в языке программирования питон.
#"селф" - это ссылка на сам экземпляр, который мы создадим на основе нашего класса



class House():                                                                                      #создаем клас: сначала команда, потом название класса
    """house desctiption"""                                                                         #описываем наш клас (документирование нашего класса, для понимания что должен делать класс, пишем в тройных кавычках)
    def __init__(self, street, number):                                                             #первый метод - метод "инит" - метод инициализации (задаем название улицы и номер дома), у него всегда будет как минимум одни аргумент "селф", метод "инит" автоматически выполняется при создании каждого нового экземпляра на базе нашего класса (в нашем случае на базе класа "Хаус")
        """propertis of house"""                                                                    #документируем наш метод "инит" тоже в тройных кавычках
        self.street=street                                                                          #(присваеваем значение, которое должен передать пользователь при создании нового экземпляра класса, т.е. при создании объекта)мы должны указать какие-то свойства в класс, какие будут у нашего "хауса"
        self.number=number
        self.age=0
    
    def build(self):                                                                                #создадим метод отличный от метода "инит" в нашем классе, методо будет выводит инфо, о том что дом на такой улице под таким то номером у нас построен   ("селф", указываем, чтобы метод ссылался конкретно на этот экземпляр)
        """Build house"""                                                                           #документируем метод, описываем, что он будет строить дом
        print("House on the street " + self.street + "nmbr. " + str(self.number) + " is building "+str(self.age)+ " years")  #он будет выводить сообщение что дом на улице по такому то адресу построен

    def aoh(self, year):
        """age of house"""
        self.age += year

House1 = House("Kyivska ",20)                                                                       #создадим несколько домов в нашем воображаемом городе        
House2 = House("Kyivska ",21)
House3 = House("Dniprovska ",15)

print(House1.street)                                                                                #выводим на какой улице у нас находится дом1  - это обращение к свойствам
print(House1.number)                                                                                #выводим под каким номером дом 1 - это также обращение к свойствам

House2.build()                                                                                      #обращаемся к нашему методу "билд"

House1.aoh(2)
print(House1.age)                                                                                   #добавив элемент "адж"(который заранее мы описали в классе выше) можем вывести его

# создадим новый класс, который сможет наследовать параметры предыдущего класса, пусть это будут дома на на улице а на проспекте

class ProspectHouse(House):                                                                         #указываем в скобках какой класс будет наследовать вновь созданный - хаус
    """Houses on the prospect"""
    def __init__(self, prospect, number):                                                           #у него также будет свой метод инициализации
        super().__init__(self,number)
        self.prospect = prospect

House4 = ProspectHouse("Shevchenka",7)
print(House4.prospect)



House3.build()







